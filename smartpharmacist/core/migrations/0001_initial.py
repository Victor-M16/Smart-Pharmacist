# Generated by Django 5.0.7 on 2024-08-17 22:46

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Medication',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('package_size', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='VendingMachine',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('location', models.CharField(max_length=255)),
                ('status', models.CharField(max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('first_name', models.CharField(max_length=255)),
                ('last_name', models.CharField(max_length=255)),
                ('account_type', models.CharField(choices=[('Doctor', 'Doctor'), ('Patient', 'Patient'), ('Pharmacist', 'Pharmacist')], max_length=150, null=True)),
                ('specialty', models.CharField(blank=True, choices=[('General', 'General'), ('Cardiology', 'Cardiology'), ('Dermatology', 'Dermatology'), ('Endocrinology', 'Endocrinology'), ('Gastroenterology', 'Gastroenterology'), ('General Surgery', 'General Surgery'), ('Hematology', 'Hematology'), ('Infectious Disease', 'Infectious Disease'), ('Nephrology', 'Nephrology'), ('Neurology', 'Neurology'), ('Obstetrics & Gynecology', 'Obstetrics & Gynecology'), ('Oncology', 'Oncology'), ('Ophthalmology', 'Ophthalmology'), ('Orthopedic Surgery', 'Orthopedic Surgery'), ('Otolaryngology', 'Otolaryngology'), ('Pediatrics', 'Pediatrics'), ('Psychiatry', 'Psychiatry'), ('Pulmonology', 'Pulmonology'), ('Radiology', 'Radiology'), ('Rheumatology', 'Rheumatology'), ('Urology', 'Urology')], max_length=100, null=True)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('national_id', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('dob', models.DateField(blank=True, null=True, verbose_name='dob')),
                ('gender', models.CharField(max_length=255, null=True)),
                ('id_data', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_patient', models.BooleanField(default=False)),
                ('is_doctor', models.BooleanField(default=False)),
                ('is_pharmacist', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Prescription',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('code', models.CharField(max_length=4, unique=True)),
                ('instructions', models.TextField(blank=True, max_length=200, null=True)),
                ('sickness', models.CharField(max_length=100)),
                ('is_dispensed', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Doctor', to=settings.AUTH_USER_MODEL)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='Patient', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PrescriptionMedication',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('dosage', models.CharField(max_length=100)),
                ('frequency', models.CharField(max_length=100)),
                ('duration', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.medication')),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.prescription')),
            ],
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('quantity', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.medication')),
                ('vending_machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.vendingmachine')),
            ],
        ),
        migrations.CreateModel(
            name='Dispensation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('prescription', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.prescription')),
                ('vending_machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.vendingmachine')),
            ],
        ),
        migrations.CreateModel(
            name='VendingSlot',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('slot_number', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('medication', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.medication')),
                ('vending_machine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.vendingmachine')),
            ],
        ),
    ]
